import unittest
import CheckUtils

class MyTestCase(unittest.TestCase):
    def test_whiteKingCheck(self):
        position = [['.', '.', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', '.', '.', '.'],
                    ['.', 'r', '.', 'K', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', 'k', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', '.', '.', '.']]
        self.assertEqual(True, CheckUtils.isKingChecked(position, True))
        position = [['.', '.', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', '.', '.', '.'],
                    ['.', 'r', '.', 'K', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', 'k', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', '.', '.', '.']]
        self.assertEqual(False, CheckUtils.isKingChecked(position, False))
        position = [['.', '.', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', '.', '.', '.'],
                    ['.', 'r', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', 'K', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', 'k', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', '.', '.', '.']]
        self.assertEqual(False, CheckUtils.isKingChecked(position, True))
        position = [['.', '.', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', 'b', '.', '.'],
                    ['.', 'r', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', 'K', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', 'R', '.', 'k', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', '.', '.', '.']]
        self.assertEqual(True, CheckUtils.isKingChecked(position, True))
        position = [['.', '.', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', 'q', '.', '.'],
                    ['.', 'r', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', 'K', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', 'k', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', '.', '.', '.']]
        self.assertEqual(True, CheckUtils.isKingChecked(position, True))
        position = [['.', '.', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', 'n', '.', '.'],
                    ['.', 'r', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', 'K', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', 'k', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', '.', '.', '.']]
        self.assertEqual(False, CheckUtils.isKingChecked(position, True))
        position = [['.', '.', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', 'n', '.', '.', '.'],
                    ['.', 'r', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', 'K', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', 'k', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', '.', '.', '.']]
        self.assertEqual(True, CheckUtils.isKingChecked(position, True))
        position = [['.', '.', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', 'b', '.', '.', '.'],
                    ['.', 'r', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', 'K', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', 'R', '.', 'k', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', '.', '.', '.']]
        self.assertEqual(False, CheckUtils.isKingChecked(position, True))
        position = [['.', '.', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', 'b', '.', '.', '.'],
                    ['.', 'r', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', 'K', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', 'R', '.', 'k', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', '.', '.', '.']]
        self.assertEqual(True, CheckUtils.isKingChecked(position, False))
        position = [['.', '.', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', 'b', '.', '.'],
                    ['.', 'r', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', 'K', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', 'r', '.', 'k', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', '.', '.', '.'],
                    ['.', '.', '.', '.', '.', '.', '.', '.']]
        self.assertEqual(False, CheckUtils.isKingChecked(position, False))

if __name__ == '__main__':
    unittest.main()
